// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/uow/uow.go

// Package mock_uow is a generated GoMock package.
package mock_gateway_account

import (
	uow "bank_server/pkg/uow"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUowInterface is a mock of UowInterface interface.
type MockUowInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUowInterfaceMockRecorder
}

// MockUowInterfaceMockRecorder is the mock recorder for MockUowInterface.
type MockUowInterfaceMockRecorder struct {
	mock *MockUowInterface
}

// NewMockUowInterface creates a new mock instance.
func NewMockUowInterface(ctrl *gomock.Controller) *MockUowInterface {
	mock := &MockUowInterface{ctrl: ctrl}
	mock.recorder = &MockUowInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUowInterface) EXPECT() *MockUowInterfaceMockRecorder {
	return m.recorder
}

// CommitOrRollback mocks base method.
func (m *MockUowInterface) CommitOrRollback() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CommitOrRollback")
	ret0, _ := ret[0].(error)
	return ret0
}

// CommitOrRollback indicates an expected call of CommitOrRollback.
func (mr *MockUowInterfaceMockRecorder) CommitOrRollback() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CommitOrRollback", reflect.TypeOf((*MockUowInterface)(nil).CommitOrRollback))
}

// Do mocks base method.
func (m *MockUowInterface) Do(ctx context.Context, fn func(*uow.Uow) error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Do", ctx, fn)
	ret0, _ := ret[0].(error)
	return ret0
}

// Do indicates an expected call of Do.
func (mr *MockUowInterfaceMockRecorder) Do(ctx, fn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Do", reflect.TypeOf((*MockUowInterface)(nil).Do), ctx, fn)
}

// GetRepository mocks base method.
func (m *MockUowInterface) GetRepository(ctx context.Context, name string) (any, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRepository", ctx, name)
	ret0, _ := ret[0].(any)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRepository indicates an expected call of GetRepository.
func (mr *MockUowInterfaceMockRecorder) GetRepository(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRepository", reflect.TypeOf((*MockUowInterface)(nil).GetRepository), ctx, name)
}

// Register mocks base method.
func (m *MockUowInterface) Register(name string, factory uow.RepositoryFactory) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Register", name, factory)
}

// Register indicates an expected call of Register.
func (mr *MockUowInterfaceMockRecorder) Register(name, factory interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockUowInterface)(nil).Register), name, factory)
}

// Rollback mocks base method.
func (m *MockUowInterface) Rollback() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Rollback")
	ret0, _ := ret[0].(error)
	return ret0
}

// Rollback indicates an expected call of Rollback.
func (mr *MockUowInterfaceMockRecorder) Rollback() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Rollback", reflect.TypeOf((*MockUowInterface)(nil).Rollback))
}

// UnRegister mocks base method.
func (m *MockUowInterface) UnRegister(name string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UnRegister", name)
}

// UnRegister indicates an expected call of UnRegister.
func (mr *MockUowInterfaceMockRecorder) UnRegister(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UnRegister", reflect.TypeOf((*MockUowInterface)(nil).UnRegister), name)
}
